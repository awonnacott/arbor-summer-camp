---
import LinkBlend from "@components/global/LinkBlend.astro";
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils";
import { PATHS } from "@config/constants";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<section id="hero" class="section home-dark-section hero hero-background min-h-screen">
	<div class="flex h-full flex-col">
		<div class="relative flex flex-col justify-around items-center rounded-lg pb-10 lg:rounded-4xl" style="min-height: 80vh;">
			<!-- Using flex column instead of absolute positioning for better responsiveness -->
			<div class="flex flex-col items-center justify-center gap-4 md:gap-4 lg:gap-4 bg-opacity-70 bg-slate-400 rounded-xl sm:rounded-3xl md:rounded-4xl p-6 md:p-12 w-fit">
				<!-- Date line above the title -->
				<div class="flex flex-col items-center justify-center">
					<p id="hero-date" class="flex flex-col sm:block text-center font-mono text-md md:text-xl font-bold text-campfire-700 opacity-0 translate-y-8">
						<span class="text-sm md:text-xl">Monday, June 2 â€“ Friday, June 6</span>
						<!-- Mobile location -->
						<span class="inline sm:hidden text-sm text-campfire-700"><a href="https://lighthaven.org" target="_blank" class="underline">Lighthaven&nbsp;Campus</a>,&nbsp;Berkeley&nbsp;CA</span>
						<!-- Desktop location -->
						<span class="hidden md:inline"> | </span>
						<span class="hidden md:inline"><a href="https://lighthaven.org" target="_blank" class=" hover:text-campfire-600 transition-colors underline">Lighthaven&nbsp;Campus</a>,&nbsp;Berkeley&nbsp;CA</span>
					</p>
					
				</div>
				<!-- Title container -->
				<h1 id="hero-title" class="text-center font-display text-6xl font-extrabold uppercase sm:text-7xl md:text-7xl lg:text-8xl text-forest-950 text-shadow opacity-0 translate-y-8">
					ARBOR SUMMER CAMP
				</h1>
				
				<!-- Content below the title -->
				<div class="flex flex-col items-center gap-2 text-center">
					<p id="hero-subtitle" class="max-w-6xl font-mono md:text-lg lg:text-xl text-forest-900 text-shadow-sm opacity-0 translate-y-8">
						A <span class="tooltip-trigger relative cursor-help">micromester
							<span class="tooltip absolute top-8 left-1/2 -translate-x-1/2 w-40 bg-white/90 backdrop-blur-sm text-forest-800 text-xs py-1 px-2 rounded shadow-md opacity-0 invisible transition-opacity duration-200 pointer-events-none z-10 font-mono">
								like a minimester, but even smaller
							</span>
						</span> of workshops and bootcamps the week between 
						<a href="https://less.online" target="_blank" class="text-forest-900 hover:text-campfire-600 transition-colors underline">LessOnline</a>&nbsp;and&nbsp;<a href="https://manifest.is" target="_blank" class="text-forest-900 hover:text-campfire-600 transition-colors underline">Manifest</a>
					</p>
					<div id="hero-cta" class="flex flex-col items-center justify-center gap-3 lg:col-start-1 mt-4 opacity-0 translate-y-8">
						<div class="rounded-lg bg-campfire-500 hover:bg-campfire-600 transition-colors" data-cursor-hover data-cursor-parallax>
							<a
								class="flex w-full flex-1 items-center justify-center py-2 text-4xl text-white transition-all hover:text-white sm:w-auto px-6 lg:px-8 sm:text-5xl font-display font-bold"
								aria-label="Buy Tickets"
								href={PATHS.TICKETS}
								target="_blank"
								rel="noopener">
								tickets
							</a>
						</div>

						<small class="text-forest-900 font-medium">
							or
							<LinkBlend id="go-projects-button" isButton={true} class="text-campfire-800 hover:text-campfire-500">scroll to see more</LinkBlend>
						</small>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<style>
	.hero {
		padding-bottom: 0;
		position: relative;
		border-radius: inherit;
		overflow: hidden;
	}
	.hero > div {
		grid-column: 1 / span 12;
	}

	/* Background image with fade effect */
	.hero-background {
		position: relative;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-image: url('/images/oli_asc_cover.png');
		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;
		z-index: 0;
		mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1) 80%, rgba(0, 0, 0, 0) 100%);
		-webkit-mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.8) 80%, rgba(0, 0, 0, 0) 100%);
		/* Add a brightness filter to make the image sunnier */
		filter: brightness(1.2) saturate(1.2);
	}

	/* Replace dark overlay with a light, sunny one */
	.hero-background::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		/* Use a light golden overlay instead of dark */
		background: linear-gradient(to bottom, rgba(255, 236, 179, 0.3), rgba(245, 158, 11, 0));
		z-index: -1;
	}

	/* Hero appearance */
	.hero h1,
	.hero h2,
	.hero h3 {
		margin: 0;
	}
	
	/* Adjust text shadow for better readability on bright background */
	.text-shadow {
		text-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
	}
	
	.text-shadow-sm {
		text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
	}
	
	/* Tooltip styles */
	.tooltip-trigger {
		/* Removed the border-bottom style */
	}
	
	.tooltip::after {
		content: '';
		position: absolute;
		bottom: 100%; /* Changed from top to bottom */
		left: 50%;
		transform: translateX(-50%);
		border-width: 5px;
		border-style: solid;
		border-color: transparent transparent rgba(255, 255, 255, 0.9) transparent; /* Changed arrow direction */
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { ScrollToPlugin } from "gsap/ScrollToPlugin";

	gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);

	function init() {
		// Sequential animation for all elements
		const heroDate = document.getElementById("hero-date");
		const heroTitle = document.getElementById("hero-title");
		const heroSubtitle = document.getElementById("hero-subtitle");
		const heroCta = document.getElementById("hero-cta");
		
		// Create a timeline for sequential animation - no need to set initial states in JS
		// as they're now set in the HTML/CSS
		const tl = gsap.timeline();
		
		// Animate date first
		tl.to(heroDate, {
			duration: 0.8,
			opacity: 1,
			y: 0,
			ease: "power3.out"
		});
		
		// Then animate title
		tl.to(heroTitle, {
			duration: 1,
			opacity: 1,
			y: 0,
			ease: "power3.out"
		}, "-=0.4"); // Start slightly before the previous animation finishes
		
		// Then animate subtitle
		tl.to(heroSubtitle, {
			duration: 0.8,
			opacity: 1,
			y: 0,
			ease: "power3.out"
		}, "-=0.4");
		
		// Finally animate CTA
		tl.to(heroCta, {
			duration: 0.8,
			opacity: 1,
			y: 0,
			ease: "power3.out"
		}, "-=0.4");

		// Handle scroll button
		const goProjectsButton = document.getElementById("go-projects-button");
		goProjectsButton?.addEventListener("click", function () {
			gsap.to(window, { duration: 0.5, scrollTo: "#explanation" });
		});
		
		// Tooltip functionality
		const tooltipTriggers = document.querySelectorAll('.tooltip-trigger');
		
		tooltipTriggers.forEach(trigger => {
			const tooltip = trigger.querySelector('.tooltip');
			
			// For desktop: mouseover/mouseout
			trigger.addEventListener('mouseenter', () => {
				if (tooltip) {
					gsap.to(tooltip, {
						opacity: 1,
						visibility: 'visible',
						duration: 0.2,
						ease: 'power1.out'
					});
				}
			});
			
			trigger.addEventListener('mouseleave', () => {
				if (tooltip) {
					gsap.to(tooltip, {
						opacity: 0,
						visibility: 'hidden',
						duration: 0.2,
						ease: 'power1.in'
					});
				}
			});
			
			// For mobile: touch events
			trigger.addEventListener('touchstart', (e) => {
				e.preventDefault();
				if (tooltip) {
					// Toggle tooltip visibility
					if (tooltip.style.opacity === '1') {
						gsap.to(tooltip, {
							opacity: 0,
							visibility: 'hidden',
							duration: 0.2,
							ease: 'power1.in'
						});
					} else {
						gsap.to(tooltip, {
							opacity: 1,
							visibility: 'visible',
							duration: 0.2,
							ease: 'power1.out'
						});
					}
				}
			});
			
			// Close tooltip when clicking elsewhere on mobile
			document.addEventListener('touchstart', (e) => {
				if (!trigger.contains(e.target) && tooltip && tooltip.style.opacity === '1') {
					gsap.to(tooltip, {
						opacity: 0,
						visibility: 'hidden',
						duration: 0.2,
						ease: 'power1.in'
					});
				}
			});
		});
	}

	// Run the animation as soon as possible, not just on DOMContentLoaded
	init();
	// Keep the DOMContentLoaded listener as a fallback
	document.removeEventListener("DOMContentLoaded", init);
	document.addEventListener("DOMContentLoaded", init);
</script>
